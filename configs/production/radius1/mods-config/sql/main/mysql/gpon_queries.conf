safe_characters = "@abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789.-_: /"

sql_user_name = "%{User-Name}"


event_timestamp_epoch = "%{%{integer:Event-Timestamp}:-%l}"


event_timestamp = "FROM_UNIXTIME(${event_timestamp_epoch})"

class {
	column_name =	# ", class"
	packet_xlat =	# ", '%{Class}'"
	reply_xlat =	# ", '%{reply:Class}'"
}


client_query = "\
	SELECT id, nasname, shortname, type, secret, server \
	FROM ${client_table}"


authorize_check_query = "\
	SELECT id, USER_ID, ATTRIBUTE, VALUE, OP \
	FROM ${authcheck_table} \
	WHERE user_id = '%{SQL-User-Name}'"


authorize_reply_query = "\
	SELECT id, USER_ID, ATTRIBUTE, VALUE, OP  \
	FROM ${authreply_table} \
	WHERE user_id = '%{SQL-User-Name}' \
	ORDER BY id "


#simul_count_query = "\
#	SELECT COUNT(*) \
#	FROM ${acct_table1} a \
#	LEFT OUTER JOIN nasreload n USING (nasipaddress) \
#	WHERE username = '%{SQL-User-Name}' \
#	AND acctstoptime IS NULL \
#	AND (a.acctstarttime > n.reloadtime OR n.reloadtime IS NULL)"

#simul_verify_query = "\
#	SELECT \
#		radacctid, acctsessionid, username, nasipaddress, nasportid, framedipaddress, \
#		callingstationid, framedprotocol \
#	FROM ${acct_table1} a \
#	LEFT OUTER JOIN nasreload n USING (nasipaddress) \
#	WHERE username = '%{SQL-User-Name}' \
#	AND acctstoptime IS NULL \
#	AND (a.acctstarttime > n.reloadtime OR n.reloadtime IS NULL)"


accounting {
	reference = "%{tolower:type.%{%{Acct-Status-Type}:-%{Request-Processing-Stage}}.query}"


	type {
		accounting-on {

		}

		accounting-off {
		}


		post-auth {

		}

		start {
		    query = "\
		        UPDATE ${....session_table} SET \
				ACCTSESSIONID = '%{Acct-Session-Id}', \
				ACCTMULTISESSIONID = '%{Acct-Multi-Session-Id}', \
				USERIP = '%{Framed-IP-Address}', \
				STARTDATETIME = ${....event_timestamp}, \
				CALLEDSTATIONID = '%{Called-Station-Id}' \
			WHERE USER_ID = '%{SQL-User-Name}' \
				AND MAC = '%{Calling-Station-Id}' \
				AND NASIDENTIFIER = '%{NAS-Identifier}' \
				AND NASPORT = '%{%{NAS-Port-ID}:-%{NAS-Port}}'"

		}

		interim-update {

		}

		stop {
			query = "\
			    DELETE FROM ${....session_table} \
			    WHERE USER_ID = '%{SQL-User-Name}' \
				AND MAC = '%{Calling-Station-Id}' \
				AND NASIDENTIFIER = '%{NAS-Identifier}' \
				AND NASPORT = '%{NAS-Port}'"
		}


		accounting {
			query = "SELECT true"
		}
	}
}

post-auth {
	# Update GPON_SESSION table
	query =	"\
		INSERT INTO ${..session_table} \
			(USER_ID, MAC, NASIDENTIFIER, NASPORT, ACCTSESSIONID, ACCTMULTISESSIONID, USERIP, CALLERID, CALLEDSTATIONID, SESSIONTIMEOUT, CREATE_DATE ) \
		VALUES ( \
			'%{SQL-User-Name}', \
			'%{Calling-Station-Id}', \
			'%{NAS-Identifier}', \
			'%{NAS-Port}', \
			'%{Acct-Session-Id}', \
			'%{Acct-Multi-Session-Id}', \
			'%{Framed-IP-Address}', \
			'%{Caller-ID}', \
			'%{Called-Station-Id}', \
			'%{Session-Timeout}', \
			${..event_timestamp})"


}
